akka {
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  # Unfortunately, it seems like Gossip doesn't work over UDP :(
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0 // this shoud be overriden
      transport-protocol = tcp
    }
  }

  cluster {
    metrics.enabled = off

    seed-node-timeout = 120s
  }

  akka.contrib.cluster.pub-sub {
    # Actor name of the mediator actor, /user/distributedPubSubMediator
    name = distributedPubSubMediator

    # Start the mediator on members tagged with this role.
    # All members are used if undefined or empty.
    role = ""

    # The routing logic to use for 'Send'
    # Possible values: random, round-robin, broadcast
    routing-logic = broadcast

    # How often the DistributedPubSubMediator should send out gossip information
    gossip-interval = 1s

    # Removed entries are pruned after this duration
    removed-time-to-live = 120s

    # Maximum number of elements to transfer in one message when synchronizing the registries.
    # Next chunk will be transferred in next round of gossip.
    max-delta-elements = 3000
  }

  extensions = ["akka.contrib.pattern.DistributedPubSubExtension"]
}